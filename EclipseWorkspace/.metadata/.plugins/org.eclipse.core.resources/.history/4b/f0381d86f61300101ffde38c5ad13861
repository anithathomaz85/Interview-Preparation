package gts;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * **Description:** Given an array of integers, return the indices of the two numbers such that they add up to a specific target.
**Sample Test Cases:**
- Input: nums = [2, 7, 11, 15], target = 9 → Output: [0, 1]
- Input: nums = [3, 2, 4], target = 6 → Output: [1, 2]
 * */
public class Q1_PairsIndices {

	public static void main(String[] args) {
		int[] nums = {2, 7, 11, 15};
		int targetSum = 9;
		List<int[]> pairs = getPairs(nums, targetSum);

	}

	private static List<int[]> getPairs(int[] nums, int targetSum) {
		
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		for(int i=0;i<=nums.length;i++) {
			int complement = targetSum-nums[i];
			if(map.)
			map.put(nums[i], map.getOrDefault(nums[i],i));			
		}
		
		return null;
	}

}
