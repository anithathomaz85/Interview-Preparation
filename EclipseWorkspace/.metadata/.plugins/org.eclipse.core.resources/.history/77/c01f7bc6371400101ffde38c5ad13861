package gts;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

/**
 * 50.Java program to find duplicate count 
 * and print unique element from string(its contains more than millions character 
 * (Without using for loop and custom API)?
 * 
 * */
public class Q50_StringCharacterFrequency {
	public static void main(String[] args) {
		 
		String inputStr = "this is a large string";
		characterFrequncyUsingStreams(inputStr);
		//characterFrequncy(inputStr);
	}

	private static void characterFrequncyUsingStreams(String inputStr) {
		System.out.println("Duplicate characters: ");
		inputStr.chars()
			  .mapToObj(c->(char)c)
			  .collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))
			  .entrySet()
			  .stream() 
			  .filter(entry->(entry.getValue()>1 && !Character.isWhitespace(entry.getKey())))
			  .forEach(entry->System.out.println("Character: "+entry.getKey()+", Count: "+entry.getValue()));
		
		System.out.println("Unique characters: ");
		inputStr.chars()
				.mapToObj(c->(char)c)
				.collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))
				.entrySet()
				.stream()
				.filter(entry->entry.getValue()==1)
				.forEach(System.out.println("Character: "+entry.getKey()+", Count: "+entry.getValue()));
		
			 
		
	}

}
