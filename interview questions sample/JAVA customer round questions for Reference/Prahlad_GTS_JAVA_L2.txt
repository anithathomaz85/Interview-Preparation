tell me about your Project
-----------------------------------------------------------------------
class Employee
{
private Integer id;
private String name;
public static void main(String[] args)
{
Employee e1 = new Employee(1, "prahlad);
Employee e2 = new Employee(3, "prahlad);
Employee e3 = new Employee(5, "prahlad);
Employee e4 = new Employee(8, "prahlad);
Employee e5 = new Employee(4, "prahlad);

List<Employee> empList = new ArrayList<>();
empList.add(e1);
empList.add(e2);
empList.stream().sorted(Comparator.comparingInt(Employee::id)).Collect(collectors.toList());

empList.stream().sorted(Comparator.comparingInt(Employee::id)).distinct().Collect(collectors.toList());



}
}
Questions asked on this coding like:  
1. how to sort the employee based on id
2. eliminate the duplicates
3. how distinct() works internally
-------------------------------------------------------------
class Util
{
public static int add(int a, int b)
{
return a+b;
}
}

Questions: 
1. is this method is thread safe or not?
2. logic to convert the code into non thread safe?

------------------------------------------------------------
Questions:
1. write the logic to make the class is immutable
Ans:
final class Employee
{
private final Integer id;
private final String name;

//gettter and no setter method
public Integer id(Integer Id)
{
}

Employee(Integer id, String name)
{
}

}
}

